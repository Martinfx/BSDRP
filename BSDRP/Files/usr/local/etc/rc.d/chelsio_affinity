#!/bin/sh
# Bind Chelsio interrupt threads to different cores (melifaro@FreeBSD.org)

# PROVIDE:      chelsio_affinity
# REQUIRE:      FILESYSTEMS netif
# KEYWORD:      nojail

#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# chelsio_affinity_enable (bool):   Set to YES by default.
#               Set it to YES to bind interrupt threads to different cores
# chelsio_affinity_avoidncpu (int):  0 by default.
#		Set to number of CPU to exclude from binding
# chelsio_affinity_firstcpu (int): 0 by default.
#		Allow to avoid a first range of CPU (for skiping a numa-domain)

. /etc/rc.subr

name="chelsio_affinity"
rcvar=${name}_enable

start_cmd="chelsio_affinity_start"

chelsio_affinity_start()
{
	# Need a Chelsio NIC
	NQcxl=$(/sbin/sysctl -ni dev.cxl.0.nrxq)
	NQcc=$(/sbin/sysctl -ni dev.cc.0.nrxq)
	if [ -z "${NQcc}" && -z "${NQcxl}"]; then
		echo "No Chelsio NIC port detected"
		exit 0;
	fi

	# Work with 2 CPU minimum
	NCPU=$(/sbin/sysctl -n hw.ncpu)
	if [ ${NCPU} -le 2 ]; then
		echo "Not enought CPU detected"
		exit 0
	fi

	# Exclude some CPU from binding
	NCPU=$((NCPU - ${chelsio_affinity_avoidncpu}))
	CPU=${chelsio_affinity_firstcpu}
    if [ ! -z "${NQcxl}" ]; then
		cxl=$(sysctl dev.cxl. | grep -c nrxq)
		for i in $(seq 0 $((cxl - 1))); do
			for IRQ in `/usr/bin/vmstat -ai |\
				/usr/bin/sed -nE "/t5nex[01234567]:${i}a/s/irq([[:digit:]]+):.*/\1/p"`; do
				echo "Bind t5nex_:${i}a IRQ ${IRQ} to CPU ${CPU}"
				/usr/bin/cpuset -l ${CPU} -x ${IRQ}
				CPU=$(((CPU + 1) % NCPU))
			done
			CPU=${chelsio_affinity_firstcpu}
		done
    fi
    if [ ! -z "${NQcc}" ]; then
		cc=$(sysctl dev.cc. | grep -c nrxq)
		for i in $(seq 0 $((cc - 1))); do
			for IRQ in `/usr/bin/vmstat -ai |\
				/usr/bin/sed -nE "/t6nex[01234567]:${i}a/s/irq([[:digit:]]+):.*/\1/p"`; do
				echo "Bind t6nex_:${i}a IRQ ${IRQ} to CPU ${CPU}"
				/usr/bin/cpuset -l ${CPU} -x ${IRQ}
				CPU=$(((CPU + 1) % NCPU))
			done
			CPU=${chelsio_affinity_firstcpu}
		done
    fi
}

load_rc_config $name

: ${chelsio_affinity_enable="NO"}
: ${chelsio_affinity_avoidncpu=0}
: ${chelsio_affinity_firstcpu=0}

run_rc_command "$1"

