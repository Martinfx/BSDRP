Index: devel/jsoncpp/files/patch-SConstruct
===================================================================
--- devel/jsoncpp/files/patch-SConstruct	(revision 494151)
+++ devel/jsoncpp/files/patch-SConstruct	(working copy)
@@ -1,6 +1,21 @@
---- SConstruct.orig	2016-05-09 23:15:49 UTC
+--- SConstruct.orig	2019-02-28 14:42:20 UTC
 +++ SConstruct
-@@ -26,7 +26,7 @@ try:
+@@ -1,5 +1,5 @@
+ """
+-Notes: 
++Notes:
+ - shared library support is buggy: it assumes that a static and dynamic library can be build from the same object files. This is not true on many platforms. For this reason it is only enabled on linux-gcc at the current time.
+ 
+ To add a platform:
+@@ -7,6 +7,7 @@ To add a platform:
+ - add tool initialization for this platform. Search for "if platform == 'suncc'" as an example.
+ """
+ 
++from __future__ import print_function
+ import os
+ import os.path
+ import sys
+@@ -26,18 +27,18 @@ try:
      if platform == 'linux-gcc':
          CXX = 'g++' # not quite right, but env is not yet available.
          import commands
@@ -7,9 +22,24 @@
 -        version = commands.getoutput('%s -dumpversion' %CXX)
 +        version = 'FreeBSD'
          platform = 'linux-gcc-%s' %version
-         print "Using platform '%s'" %platform
+-        print "Using platform '%s'" %platform
++        print("Using platform '%s'" %platform)
          LD_LIBRARY_PATH = os.environ.get('LD_LIBRARY_PATH', '')
-@@ -65,7 +65,7 @@ def make_environ_vars():
+         LD_LIBRARY_PATH = "%s:libs/%s" %(LD_LIBRARY_PATH, platform)
+         os.environ['LD_LIBRARY_PATH'] = LD_LIBRARY_PATH
+-        print "LD_LIBRARY_PATH =", LD_LIBRARY_PATH
++        print("LD_LIBRARY_PATH =", LD_LIBRARY_PATH)
+ except KeyError:
+-    print 'You must specify a "platform"'
++    print('You must specify a "platform"')
+     sys.exit(2)
+ 
+-print "Building using PLATFORM =", platform
++print("Building using PLATFORM =", platform)
+ 
+ rootbuild_dir = Dir('#buildscons')
+ build_dir = os.path.join( '#buildscons', platform )
+@@ -65,7 +66,7 @@ def make_environ_vars():
  	return vars
  	
  
@@ -18,15 +48,18 @@
                     toolpath = ['scons-tools'],
                     tools=[] ) #, tools=['default'] )
  
-@@ -121,6 +121,7 @@ elif platform.startswith('linux-gcc'):
+@@ -121,8 +122,9 @@ elif platform.startswith('linux-gcc'):
      env.Tool( 'default' )
      env.Append( LIBS = ['pthread'], CCFLAGS = os.environ.get("CXXFLAGS", "-Wall"), LINKFLAGS=os.environ.get("LDFLAGS", "") )
      env['SHARED_LIB_ENABLED'] = True
 +    env['CXX'] = os.environ['CXX']
  else:
-     print "UNSUPPORTED PLATFORM."
+-    print "UNSUPPORTED PLATFORM."
++    print("UNSUPPORTED PLATFORM.")
      env.Exit(1)
-@@ -147,6 +148,11 @@ env['JSONCPP_VERSION'] = JSONCPP_VERSION
+ 
+ env.Tool('targz')
+@@ -147,12 +149,17 @@ env['JSONCPP_VERSION'] = JSONCPP_VERSION
  env['BUILD_DIR'] = env.Dir(build_dir)
  env['ROOTBUILD_DIR'] = env.Dir(rootbuild_dir)
  env['DIST_DIR'] = DIST_DIR
@@ -38,7 +71,14 @@
  if 'TarGz' in env['BUILDERS']:
  	class SrcDistAdder:
  		def __init__( self, env ):
-@@ -164,11 +170,11 @@ env['SRCDIST_ADD'] = SrcDistAdder( env )
+ 			self.env = env
+ 		def __call__( self, *args, **kw ):
+-			apply( self.env.SrcDist, (self.env['SRCDIST_TARGET'],) + args, kw )
++			self.env.SrcDist(*args, **kw)
+ 	env['SRCDIST_BUILDER'] = env.TarGz
+ else: # If tarfile module is missing
+ 	class SrcDistAdder:
+@@ -164,11 +171,11 @@ env['SRCDIST_ADD'] = SrcDistAdder( env )
  env['SRCDIST_TARGET'] = os.path.join( DIST_DIR, 'jsoncpp-src-%s.tar.gz' % env['JSONCPP_VERSION'] )
                        
  env_testing = env.Clone( )
@@ -52,7 +92,7 @@
      exe = env.Program( target=target_name,
                         source=target_sources )
      env['SRCDIST_ADD']( source=[target_sources] )
-@@ -187,14 +193,14 @@ def buildUnitTests( env, target_sources,
+@@ -187,14 +194,14 @@ def buildUnitTests( env, target_sources, target_name )
      env.AlwaysBuild( check_alias_target )
  
  def buildLibrary( env, target_sources, target_name ):
Index: devel/jsoncpp/files/patch-src_lib__json_json__reader.cpp
===================================================================
--- devel/jsoncpp/files/patch-src_lib__json_json__reader.cpp	(revision 494151)
+++ devel/jsoncpp/files/patch-src_lib__json_json__reader.cpp	(working copy)
@@ -1,6 +1,6 @@
---- src/lib_json/json_reader.cpp.orig	2016-10-30 21:28:16 UTC
+--- src/lib_json/json_reader.cpp.orig	2019-02-28 14:33:35 UTC
 +++ src/lib_json/json_reader.cpp
-@@ -3,6 +3,11 @@
+@@ -4,6 +4,11 @@
  // recognized in your jurisdiction.
  // See file LICENSE for detail or copy at http://jsoncpp.sourceforge.net/LICENSE
  
