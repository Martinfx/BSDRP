Index: sys/net/route.c
===================================================================
--- sys/net/route.c	(revision 355910)
+++ sys/net/route.c	(working copy)
@@ -1603,6 +1603,7 @@
 
 		rt_notifydelete(rt, info);
 
+		RTSTAT_INC(rts_rtm_delete);
 		/*
 		 * If the caller wants it, then it can have it,
 		 * but it's up to it to free the rtentry as we won't be
@@ -1746,6 +1747,7 @@
 		}
 		rnh->rnh_gen++;		/* Routing table updated */
 		RT_UNLOCK(rt);
+		RTSTAT_INC(rts_rtm_add);
 		break;
 	case RTM_CHANGE:
 		RIB_WLOCK(rnh);
Index: sys/net/route.h
===================================================================
--- sys/net/route.h	(revision 355910)
+++ sys/net/route.h	(working copy)
@@ -243,6 +243,8 @@
 	uint64_t rts_newgateway;	/* routes modified by redirects */
 	uint64_t rts_unreach;		/* lookups which failed */
 	uint64_t rts_wildcard;		/* lookups satisfied by a wildcard */
+	uint64_t rts_rtm_add;		/* calls to RTM_ADD */
+	uint64_t rts_rtm_delete;	/* calls to RTM_DELETE */
 };
 
 /*
Index: usr.bin/netstat/route.c
===================================================================
--- usr.bin/netstat/route.c	(revision 355910)
+++ usr.bin/netstat/route.c	(working copy)
@@ -793,6 +793,10 @@
 	    "{N:/destination%s found unreachable}\n");
 	p(rts_wildcard, "\t{:wildcard-uses/%ju} "
 	    "{N:/use%s of a wildcard route}\n");
+	p(rts_rtm_add, "\t{:rtm_add/%ju} "
+	    "{N:/RTM_ADD call%s}\n");
+	p(rts_rtm_delete, "\t{:rtm_delete/%ju} "
+	    "{N:/RTM_DELETE call%s}\n");
 #undef p
 
 	if (rttrash || sflag <= 1)
